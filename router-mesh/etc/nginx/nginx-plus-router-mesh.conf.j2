user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    resolver {{ resolver.host }} valid={{ resolver.ttl }};

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=rm_cache:1m max_size=1g
                     inactive=60m use_temp_path=off;

    server {
        listen 80 default_server;
        status_zone router-mesh;

        {% for name,service in services.iteritems() %}
            location =/{{ name }} {
                proxy_pass {{ service.protocol }}://{{ name }}/;
                proxy_cache rm_cache;
                proxy_cache_valid 200 5m;
                proxy_cache_use_stale http_502 http_503;
                proxy_connect_timeout 5s;
                proxy_read_timeout 10s;
            }
            location /{{ name }}/ {
                proxy_pass {{ service.protocol }}://{{ name }}/;
# health_check {% if health_check_uri %}uri={{ health_check_uri }} {% endif %}interval=5s fails=3;
            }
        {% endfor %}
    }


    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

#    include /etc/nginx/conf.d/*.conf;
#    include /etc/nginx/conf.d/upstreams/*.conf;

    {% for name, service in services.iteritems() %}
        upstream {{ name }} {
            {% if service.lb_method -%}
            {{ service.lb_method }};
            {% endif -%}
            zone {{ name }} 64k;
            server {{ service.server }}:{{ service.port }};
        }
    {% endfor %}


}


# TCP/UDP proxy and load balancing block
#
include /etc/nginx/conf.d/streams/*.conf;
